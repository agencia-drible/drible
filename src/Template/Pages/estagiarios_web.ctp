<main class="bd-masthead" id="content" role="main">
  <div class="container">

    <h1>Introdu√ß√£o √† Web</h1>

    <p class="lead"> Nesta sec√ß√£o do Website, ir√°s aprender os conceitos b√°sicos do que se trabalha aqui na Drible e que programas se usa para criar, editar e finalizar websites.</p>

    <hr>

    <h1>Ferramentas Necess√°rias</h1>

    <h2>Atom</h2>

    <p class="lead">O Atom √© um editor de texto, faz <a href="https://atom.io/"  target="_blank">download</a> dele, vamos utilizar esta ferramenta mais a frente. </p>

    <h3>O que √©, para que serve e o que procurar num editor de texto?</h3>

    <p class="lead">Essencialmente, um editor de texto √© um programa que te permite criar e editar variadas linguagens de programa√ß√£o.</p>

    <p class="lead"> Editores de texto s√£o frequentemente equipados com sistemas operacionais ou pacotes de desenvolvimento de software, e pode ser usado para alterar arquivos de configura√ß√£o e linguagem de programa√ß√£o de c√≥digo fonte. </p>

    <ul>
      <li class="lead">F√°cil de usar e navegar.</li>
      <li class="lead">Ferramenta de encontrar e mudar (para que possas uma mudar uma palavra no ficheiro inteiro sem muito esfor√ßo).</li>
      <li class="lead">Cortar, copiar e colar.</li>
      <li class="lead">Syntax highlighting (torna mais f√°cil ler o c√≥digo e encontrar algum erro).</li>
      <li class="lead">Apar√™ncia Customiz√°vel (tal como mudar a fonte da letra, esquema de cores, etc., do teu editor).</li>
      <li class="lead">Extensibilidade (que forne√ßa algum mecanismo de plugin, ou que seja program√°vel , para que um programador possa costumizar o editor com caracter√≠sticas adicionais).</li>
    </ul>

    <hr>

    <h2>Git</h2>

    <h3>O que √© um git?</h3>

    <p class="lead">Git √© um tipo de sistema de controlo de vers√µes que torna mais f√°cil monitorizar as altera√ß√µes no ficheiro. Por exemplo, quando editas um ficheiro, git pode ajudar te a determinar exatamente oque mudou, quando mudou e porqu√™.</p>

    <p class="lead">√â √∫til para coordenar trabalho entre m√∫ltiplas pessoas num projeto, e para monitorizar o progresso ao longo do tempo guardando ‚Äúcheckpoints‚Äù.</p>

    <p class="lead">Existe v√°rios tipos de alojamento online tais como o <a href="https://github.com/"  target="_blank">GitHub</a> e o <a href="https://bitbucket.org/" target="_blank">BitBucket</a>.</p>

    <hr>

    <h3>Compreender o git?</h3>

    <p class="lead">Git usa muita analogias relacionadas com ‚Äú√°rvores‚Äù. Pensa na c√≥digo principal como se fosse o tronco de uma √°rvore üéÑ.</p>

    <p class="lead">Sempre que adicionares mais altera√ß√µes (commits), o teu tronco fica maior. Mesmo que apagues o c√≥digo, ainda √© considerado uma mudan√ßa e isso faz com que o tronco cres√ßa. √â como a ferramenta ‚Äúundo‚Äù [desfazer] funciona num editor de texto (tipo o Word), salva todas as altera√ß√µes, incluindo o apagar.</p>

    <p class="lead">Pode andar para cima e para baixo no tronco‚Ää‚Äî‚Ääequivalente a andar para a frente e para tr√°s no tempo‚Ää‚Äî‚Ääpor verificar os tais ‚Äúcheckpoints‚Äù espec√≠ficos.</p>

    <hr>

    <h3>O que √© branching?</h3>

    <p class="lead">Muito dos projetos t√™m uma acumula√ß√£o de caracter√≠sticas novas para adicionar e bugs para arranjar. Quando te queres dirigir a um destes problemas, uma maneira seria aumentar a √°rvore e comprometer-se diretamente ao tronco. Isto funciona perfeitamente para projetos pequenos ou projetos onde √©s a √∫nica pessoa a fazer altera√ß√µes, mas e se m√∫ltiplas pessoas estiverem a trabalhar ao mesmo tempo? √â muito f√°cil atrapalharmo-nos e acabar por dar conflitos de altera√ß√µes.</p>

    <p class="lead">A solu√ß√£o √© branching (ramificar). Em vez de te comprometeres ao tronco, crias o teu pr√≥prio ramo e trabalhas a partir da√≠. Assim tornas o ramo maior em vez do tronco.</p>

    <p class="lead">Ao visualizar ramos, normalmente eles s√£o desenhados lateralmente para ocupar menos espa√ßo. Imagina que o seguinte √© uma √°rvore, tombada, com as ra√≠zes √° esquerda. Cada c√≠rculo √© uma altera√ß√£o. Quanto mais para a direita o c√≠rculo √©, mais recentemente foi alterado:</p>

    <img src="/img/branching_exemplo1.png" alt="Branching">

    <p class="lead"> Legenda: Trunk = tronco / Branch = ramo / Root = ra√≠z </p>

    <p class="lead">Existe um tronco azul e um ramo verde. Existe v√°rias altera√ß√µes em ambos, mostrado cronologicamente da esquerda para a direita. O teu ramo come√ßa no 2¬∫ tronco (Trunk #2). Enquanto trabalhas no teu ramo [ altera√ß√µes no 1¬∫ e 2¬∫ ramo ( Branch #1 e Branch #2 )], algu√©m trabalhou diretamente no tronco [ altera√ß√µes no 3¬∫ e 4¬∫ tronco ( Trunk #3 e Trunk #4 )]. Essas altera√ß√µes ainda n√£o afetaram o teu ramo ainda, o teu ramo est√° desatualizado.</p>

    <hr>

    <h2>Submeter as altera√ß√µes?</h2>

    <p class="lead"> Agora tens as tuas altera√ß√µes num ramo e o teu objetivo √© eventualmente voltar a passar-los para o tronco como parte da ‚Äúoficial‚Äù c√≥digo base.</p>

    <p class="lead"> Uma vez que testado as tuas altera√ß√µes, precisar√°s de a partilhar com a tua ‚Äúequipa‚Äù. Isto √© feito atrav√©s de um Pull Request (PR) ou um Merge Request (MR)‚Ää‚Äî‚Ääs√£o a mesma coisa, o termo apenas depende de que software est√°s a usar (exemplo: GitHub). Est√°s a pedir que as tuas altera√ß√µes sejam alteradas e convergidas com o c√≥digo base.</p>

    <img src="/img/branching_exemplo2.png" alt="Commiting">

    <p class="lead">Legenda: Trunk = tronco / Branch = ramo / Root = ra√≠z / Merge = convergir </p>

    <hr>

    <h2>Como obter o GitHub?</h2>

    <p class="lead"><a href="https://desktop.github.com/" target="_blank">GitHub Desktop</a> (para Windows e Mac)</p>

    <p class="lead">Agora vamos por isto tudo em pr√°tica. Clica <a href="/estagiarios/web/hellodrible" target="_blank">aqui</a>.</p>

    <hr>

    <h2>Novo reposit√≥rio git</h2>

    <p class="lead">Seu primeiro instinto, quando voc√™ come√ßa a fazer algo novo, deve ser <code>git init</code> . Voc√™ est√° come√ßando a escrever um novo artigo, voc√™ est√° escrevendo um pouco de c√≥digo para fazer uma simula√ß√£o de computador, est√° mexendo com alguns dados novos ... qualquer coisa : pense em <code>git init</code> .</p>

    <hr>

    <h2>Um novo repo do zero</h2>

    <ul>
      <p class="lead">Digamos que voc√™ acabou de obter alguns dados de um colaborador e est√° prestes a come√ßar a explor√°-lo.</p>
      <li><p class="lead">Crie um diret√≥rio para conter o projeto.</p></li>
      <li><p class="lead">V√° para o novo diret√≥rio.</p></li>
      <li><p class="lead">Digite <code>git init</code> .</p></li>
      <li><p class="lead">Digite <code>git add README.md</code> .</p></li>      
      <li><p class="lead">Digite <code>git commit -m "first commit"</code> .</p></li>
      <li><p class="lead">Digite <code>git remote add origin git@github.com:alexpchin/<reponame>.git</code> .</p></li>
      <li><p class="lead">Digite <code>git push -u origin master</code> .</p></li>
    </ul>

    <p class="lead">O primeiro arquivo para criar (e adicionar e confirmar) √© provavelmente um arquivo ReadMe, seja como texto simples ou com <a href="https://daringfireball.net/projects/markdown/">Markdown</a> , descrevendo o projeto.</p>

    <p class="lead">O Markdown permite adicionar um pouco de marca√ß√£o de texto, como <a href="https://en.wikipedia.org/wiki/Hyperlink">hiperlinks</a> , <b>negrito</b> / <i>it√°lico</i> ou para indicar c√≥digo com uma <tt>monospace</tt> font . O Markdown √© facilmente convertido para html para visualiza√ß√£o em um navegador da web, e o GitHub far√° isso automaticamente.</p>

    <hr>

    <h2>Um novo repo de um projeto existente</h2>

    <ul>
      <p class="lead">Digamos que voc√™ tenha um projeto existente que deseja come√ßar a rastrear com o git.</p>
      <li><p class="lead">V√° para o diret√≥rio que cont√©m o projeto.</p></li>
      <li><p class="lead">Digite <code>git init</code> .</p></li>
      <li><p class="lead">Digite <code>git add</code> para adicionar todos os arquivos relevantes .</p></li>
      <li><p class="lead">Voc√™ provavelmente desejar√° criar um arquivo <code>.gitignore</code> imediatamente, para indicar todos os arquivos que n√£o deseja rastrear. Use <code>git add</code> <code>.gitignore</code> tamb√©m.</p></li>
      <li><p class="lead">Digite <code>git commit</code>.</p></li>
    </ul>

    <hr>

    <h2>Conecte-o ao github</h2>

    <ul>
      <p class="lead">Voc√™ agora tem um reposit√≥rio git local. Voc√™ pode usar o git localmente, assim, se quiser. Mas se voc√™ quiser que a coisa tenha uma casa no github, fa√ßa o seguinte.</p>
      <li><p class="lead">V√° para o <a href="https://github.com/">github</a> .</p></li>
      <li><p class="lead">Fa√ßa login na sua conta.</p></li>
      <li><p class="lead">Clique no bot√£o do <a href="https://github.com/new">novo reposit√≥rio</a> no canto superior direito. Voc√™ ter√° uma op√ß√£o l√° para inicializar o reposit√≥rio com um arquivo README, mas eu n√£o.</p></li>
      <li><p class="lead">Clique no bot√£o "Criar reposit√≥rio".</p></li>
    </ul>

    <p class="lead">Agora, siga o segundo conjunto de instru√ß√µes, "Enviar um reposit√≥rio existente ..."</p>

    <code>$ git remote add origin git@github.com:username/new_repo $ git push -u origin master </code>

    <p class="lead">Na verdade, a primeira linha das instru√ß√µes dir√°</p>

    <code>$ git remote add origin https://github.com/username/new_repo </code>

    <p class="lead">Mas eu uso <code>git@github.com:username/new_repo</code> ao inv√©s de <code>https://github.com/username/new_repo</code> , como o primeiro √© para uso com o <a href="https://en.wikipedia.org/wiki/Secure_Shell">ssh</a> (se voc√™ configurar o ssh como eu mencionei em " <a href="https://kbroman.org/github_tutorial/pages/first_time.html">Sua primeira vez</a> ", ent√£o voc√™ n√£o ter√° que digitar sua senha toda vez que enviar coisas para o github). Se voc√™ usar a √∫ltima constru√ß√£o, voc√™ ter√° que digitar sua senha do github toda vez que voc√™ pressionar o github.</p>


  </div>
</main>
